---
layout: presentation.njk
title: A Solid-based Architecture for Decentralised Interoperable Location Data
presentation_title: A Solid-based Architecture for</br>Decentralised Interoperable Location Data
excerpt: "IPIN 2022 presentation"
author: <u>Maxim Van de Wynckel</u>, Beat Signer
logo: true
width: 1280
height: 720
affiliation: Web & Information Systems Engineering Lab</br>Vrije Universiteit Brussel
hide_openhps_logo: true
hide_slide_numbers: true
hide_progress: true
---
{% decktape title, page %}

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## Current indoor positioning systems (IPS)
    {% endmarkdown %}
    <img height="80%" src="images/architecture_current.svg"/>
    <aside class="notes">
        To start with some context; 
        The common architecture of current indoor positioning systems is a separate
        positioning system for each building or building site. Some positioning systems might
        use a common framework, which could allow the use of a single application for both buildings. 
        But for the majority of indoor positioning systems each system is an individual deployment with 
        its own proprietary application and without the ability to share information across systems.

        Most positioning system have a database containing the information about users or objects tracked 
        by that system, but users often do not know what information is kept in those databases - or even
        how many databases with their information exist.
    </aside>
</section>

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## Problems with current IPS'
        1. Users not in **control** of their **data**
        2. No **interoperability** between positioning **systems**
        3. No **interoperability** between (navigation) **applications**
    {% endmarkdown %}
    <img height="70%" src="images/interoperability.svg"/>
    <aside class="notes">
        There are three main problems with this common architecture. Users are not always in control of their data,
        they do not know what positioning systems or applications are tracking them, what exactly they are storing and
        in the case of external tracking do not know how to stop them from being tracked. With users becoming more privacy concious,
        this lack of transparancy could result in users not using a certain positioning system application.
        
        In addition there is no interoperability between systems and applications that would allow the sharing of data or even allow users to use a single application for
        every indoor positioning systems that is available.

        In order for two or positioning systems to be interoperable. The data needs to be accessible by other systems.
        This means that the data pertaining to a certain user should be available for all positioning systems tracking
        this user. The data can range from raw sensor data to processed information such as their location within a building.

        Next, this data needs to be readable by each system that can access this data. In essence this means that there should
        be a common data format to store the information.

        Last but definitely not least, the readable data needs to be understandable by each system. Positioning systems must be
        able to know if the data they are reading is sensor data or something else. In what units the data is in and how they should interpret the data.
    </aside>
</section>

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## Decentralised interoperable architecture
    {% endmarkdown %}
    <img height="100%" src="images/overview.svg"/>
    <aside class="notes">
        The idea of interoperability is not something that is only relevant for a positioning system.
        In 2016, the founder of the web Sir Tim Berners-Lee co founded the Social Linked Data platform.
        The idea of solid was mainly to decentralise all the users data in so called data vaults or Pods.
        Originally, the types of data that were demonstrated was things like social media pictures, posts or
        private data such as medical information so it can be shared, read and understood by other hospitals 
        that you would visit.

        In this paper we comprised an architecture that leverages Solid to store location and sensor data. In this architecure,
        all tracking data beloning to a person is stored in a data vault managed by this person. A user can give access to positioning
        systems by logging in or even revoke access to positioning systems.
    </aside>
</section>

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## Decentralised interoperable architecture
        **Core vocabularies:** SOSA, SSN (W3C&reg;)\
        **Allignment vocabularies:** GeoSPARQL (Open Geospatial Consortium&reg;), QUDT
    {% endmarkdown %}
    <img height="100%" style="margin-top: -2em;" src="images/architecture.svg"/>
    <aside class="notes">
        The architecture seperates the properties obtained by a positioning system in seperated resource files in the Pod;
        in the Figure on this slide we have a property for position, orientation and velocity of a user. Each resource file
        contains multiple observations of that property using a combination of standardised vocabularies created by Open
        Geospatial community and W3c
    </aside>
</section>

<section>
    <div style="position: absolute; top: -.5em; right: 0em; height: 140px" >
        <img style="margin: 0" height="100%" src="images/IPIN2022.svg"/>
    </div>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator
        {% endmarkdown %}

        <img data-id="poc" style="margin-top: 1em;" height="70%" src="images/poc.svg"/>

        <aside class="notes">
            We created an open source proof of concept demonstrator with three applications. Two non trivial positioning systems,
            one with GPS and a simple indoor positioning system using QR code scanning.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
        {% endmarkdown %}

        <img data-id="poc" style="float: left; margin-top: 2.5em;" height="45%" src="images/poc_geolocation.svg"/>

        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
        {% endmarkdown %}

        <img data-id="poc" style="float: left; margin-top: 2.5em;" height="45%" src="images/poc_qrcode.svg"/>

        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
        {% endmarkdown %}

        <img data-id="poc" style="float: left; margin-top: 2.5em;" height="45%" src="images/poc_consumer.svg"/>

        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
        {% endmarkdown %}

        <img data-id="poc" style="float: left; margin-top: 2.5em;" height="45%" src="images/poc_consumer_2.svg"/>

        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
        {% endmarkdown %}
        <img height="80%" src="images/phones_wip.png"/>
        <aside class="notes">
            
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
            **https://ipin2022.solidweb.org/profile/card**
            ```turtle
            :me
                a schema:Person, sos:FeatureOfInterest, foaf:Person;
                vcard:bday "2010-09-15"^^xsd:date;
                vcard:fn "John Doe";
                vcard:role "Test Account";
                acl:trustedApp
                        [
                            acl:mode acl:Append, acl:Read, acl:Write;
                            acl:origin <https://openhps.github.io>
                        ];
                ldp:inbox inbox:;
                space:preferencesFile </settings/prefs.ttl>;
                solid:oidcIssuer <https://solidweb.org>;
                ssn:hasProperty
                    </properties/orientation.ttl>, </properties/position.ttl>,
                    </properties/velocity.ttl>;
                foaf:name "John Doe".
            ```
        {% endmarkdown %}
        <aside class="notes">
            
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
            **https://ipin2022.solidweb.org/profile/card**
            ```turtle
            :me
                a schema:Person, sos:FeatureOfInterest, foaf:Person;
                vcard:bday "2010-09-15"^^xsd:date;
                vcard:fn "John Doe";
                vcard:role "Test Account";
                acl:trustedApp
                        [
                            acl:mode acl:Append, acl:Read, acl:Write;
                            acl:origin <https://openhps.github.io>
                        ];
                ldp:inbox inbox:;
                space:preferencesFile </settings/prefs.ttl>;
                solid:oidcIssuer <https://solidweb.org>;
                ssn:hasProperty
                    </properties/orientation.ttl>, </properties/position.ttl>,
                    </properties/velocity.ttl>;
                foaf:name "John Doe".
            ```
        {% endmarkdown %}
        <aside class="notes">
            
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
            **https://ipin2022.solidweb.org/properties/position.ttl**
            ```turtle
            <>
                a sos:ObservableProperty;
                rdfs:comment "Geographical position of John Doe"@en;
                rdfs:label "Geographical Position"@en;
                ssn:isPropertyOf c:me.
            :1651064675234
                a sos:Observation;
                sos:hasFeatureOfInterest c:me;
                sos:hasResult
                        [
                            a geosp:Geometry;
                            ipi:inDeployment ipi:deployment_pl9_3_32;
                            geosp:asWKT
                                "POINT Z(4.392020345921735 50.820629700445664 82.99999999813735)"^^geosp:wktLiteral;
                            geosp:coordinateDimension 3;
                            geosp:dimension 3;
                            geosp:hasSpatialAccuracy
                                    [
                                        a qudt:QuantityValue;
                                        qudt:numericValue 3.752762315948078;
                                        qudt:unit unit:M
                                    ];
                            geosp:spatialDimension 3
                        ];
                sos:observedProperty <>;
                sos:resultTime "2022-04-27T13:04:35.234Z"^^xsd:dateTime;
                sos:usedProcedure ipi:qrscanner_checkin.
            ```
        {% endmarkdown %}
        <aside class="notes">
            
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## PoC demonstrator ...
            ```sparql
            SELECT ?posGeoJSON ?datetime ?accuracy {
                ?profile a sosa:FeatureOfInterest ;
                        ssn:hasProperty ?property .
                ?observation sosa:hasResult ?result ;
                            sosa:observedProperty ?property ;
                            sosa:resultTime ?datetime .
                ?result geosparql:hasSpatialAccuracy ?spatialAccuracy ;
                        geosparql:asWKT ?posWKT .
                BIND(geof:asGeoJSON(?posWKT) AS ?posGeoJSON)
                ?spatialAccuracy qudt:numericValue ?value ;
                                qudt:unit ?unit .
                OPTIONAL { ?unit qudt:conversionMultiplier ?multiplier }
                OPTIONAL { ?unit qudt:conversionOffset ?offset }
                BIND(COALESCE(?multiplier, 1) as ?multiplier) # Default 1
                BIND(COALESCE(?offset, 0) as ?offset) # Default 0
                BIND(((?value * ?multiplier) + ?offset) AS ?accuracy)
            } ORDER BY DESC(?datetime) LIMIT 20
            ```
        {% endmarkdown %}
        <aside class="notes">
            
        </aside>
    </section>
</section>

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## Conclusion and future work
        - Novel architecture for **decentralising** location **data**
            - **User** remains **in control** of their data
        - **Interoperability** between systems and applications
            - High level decision fusion
            - Single **navigation** application
            - **Handover** of tracking between systems
        - **Scalable** to raw sensor data
        - **Vocabulary extensible** with additional semantics
    {% endmarkdown %}
    <div class="row" style="position: absolute; right: 50px; top: 130px; width: 30%;">
        <img style="width: 100%" src="../fosdem2022/images/contact.svg"/>
    </div>
    <aside class="notes">
        In this paper we presented a novel architecture for decentralising data obtained
        by a positioning system. This decentralised data is interoperable between different systems
        and even applications and gives users control on their data.

        Future work on this architecture includes a more detailed vocabulary to include.
    </aside>
</section>