---
layout: presentation.njk
title: "POSO: A Generic Positioning System Ontology"
presentation_title: "POSO: A Generic Positioning System Ontology"
excerpt: "ISWC 2022 presentation"
author: <u>Maxim Van de Wynckel</u> and Beat Signer
logo: true
width: 1280
height: 720
affiliation: Web & Information Systems Engineering Lab</br>Vrije Universiteit Brussel
hide_openhps_logo: true
hide_title_slide: true
---
{% decktape title, page %}  <!-- 15 seconds -->

<section class="title-slide center" data-timing="15">
    <div class="slide-wrapper">
        {% if logo %}
        <div class="logos">
        <div id="vub-logo"></div>
        <div id="wise-logo"></div>
        {% if not hide_openhps_logo %}
        <div id="openhps-logo"></div>
        {% endif %}
        </div>
        {% endif %}
        <h2 id="label-title">
        {% if presentation_title %}
        {{ presentation_title | safe }}
        {% else %}
        {{ title }}
        {% endif %}
        <small id="label-subtitle">{{ subtitle }}</small>
        </h2>
        <h5 class="author">{{ author | safe }}</h5>
        <h5 class="affiliation">{{ affiliation | safe }}</h5>
    </div>
    <img src="./images/example.svg" class="poso-example">
    <style>
        img.poso-example {
            object-fit: contain;
            opacity: 0.35; 
            position: absolute; 
            right: -100px; 
            bottom: -100px; 
            width: 50%; 
            height: 100%;
        }
    </style>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="20">
        {% markdown %}
            ## POsitioning System Ontology
            ### Introduction

            > POSO provides the terminology needed to describe different **types of positioning systems**, the **algorithms** and technnologies
            that they implement and the **data** that is produced by these systems.
        {% endmarkdown %}

        <aside class="notes">
            To quickly introduce you to POSO, in this paper we introduce a new ontology that provides the terminologies
            needed to describe the different types of positioning systems and the algorithms, technologies and
            techniques that they implement. It also helps to describe the data these systems produce without loosing
            any information.
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Location-based Services

        {% endmarkdown %}
        <img style="width: 100%; margin-top: 100px" src="./images/lbs4.svg">
        <aside class="notes">
            If we look at existing semantic descriptions, spatial data is an important aspect to describe
            various spaces and the objects inside them and a lot of ontologies already exist that do exactly this.

            However, if we take a step back and we look at how this data was determined, we often see it was done using a
            positioning system or a location-based service that accesses a system behind the scenes. 

            On the slide you see two similar output positions from two real location based services. 
            For consumers of this data, the output has enough context to use it. However, for other positioning systems
            that want to use further compute or reason about the data there is a lack of information. Both
            outputs were obtained while inside in a building.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Location-based Services

        {% endmarkdown %}
        <img style="width: 100%; margin-top: 100px" src="./images/lbs4.svg">
        <img style="top: 140px;" class="lbs-example" src="./images/lbs_example_1.svg">
        <img style="top: 370px;" class="lbs-example" src="./images/lbs_example_2.svg">
        <style>
            img.lbs-example {
                position: absolute;
                width: 230px;
                left: 4%;
            }
        </style>
        <aside class="notes">
            In the first example the output is from an outdoor positioning system that shows
            an incorrect location due to the lack of GPS signals inside.
            In the second example the output is from an indoor positioning system. Despite having a higher
            self-reported accuracy, this second output is more reliable inside our building than GPS signals.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Location-based Services ...
        {% endmarkdown %}
        <img style="height: 80%; width: 100%" src="./images/data-algo-tech.svg">
        <aside class="notes">
            While a location-based service aims to provide you with a nice clean geographical location, maybe even with some
            additional context such as the accuracy that can already help to determine the relevancy. 
            The system working behind the scenes has a lot more data available. In addition we do not
            know how the output of a location-based service was processed.

            With POSO we aim to describe the process that led to a certain output, which in our case means the description of the system
            that works behind the scenes and the complete set of data that is can produce. 
            Using this additional information another positioning system knows how to reason on
            the output or know how to perform high level sensor fusion. It may even be able to use additional
            data that is not important for the output - but can benefit another system.
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Positioning System
        {% endmarkdown %}
        <img width="70%" src="./images/architecture.svg"/>

        <aside class="notes">
            When creating the design for our ontology we first identified what actually defines a positioning system.

            A positioning system is a system that aims to track entities in a certain area. These entities can be objects, persons
            or basically any spatial thing. We usually deploy this positioning system at the area where this tracking
            should be done. Weither it is on another planet, a building, an underground metro track or something more 
            abstract like tracking pawns on a physical game board.

            The system uses various different algorithms and technnologies that are used to
            track an entity. Each entity on itself has different properties, such their position,
            their orientation or velocity that are important for the algorithms to determine their
            position.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Positioning System
        {% endmarkdown %}
        <img width="70%" src="images/architecture1.svg"/>

        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Positioning System
        {% endmarkdown %}
        <img width="70%" src="images/architecture3.svg"/>

        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Positioning System
        {% endmarkdown %}
        <img width="70%" src="images/architecture2.svg"/>

        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Positioning System ...
        {% endmarkdown %}
        <div class="row systems">
            <div class="col-sm-6">
                {% markdown %}
                    - Satellite positioning systems

                    ![](./images/gps.jpg){$ .positioning-system-image $}
                    - Optical positioning systems

                    ![](./images/camera.jpg){$ .positioning-system-image $}![](./images/stereocamera.jpg){$ .positioning-system-image $}
                {% endmarkdown %}
            </div>
            <div class="col-sm-6">
                {% markdown %}
                    - Inertial positioning systems

                    ![](./images/imu.jpg){$ .positioning-system-image $}
                    - Integrated positioning systems

                    ![](/images/logo.svg){$ .positioning-system-image $}
                    - Indoor positioning systems

                    ![](./images/indooratlas.png){$ .positioning-system-image $}
                {% endmarkdown %}
            </div>
        </div>
        <style>
            .reveal img.positioning-system-image {
                object-fit: cover;
                object-position: center center;
                height: 4em;
                width: 500px;
                margin: 0;
            }
        </style>    
        <aside class="notes">
        We identified five main types of positioning systems based on existing ISO standards and in use systems. 
        A satellite positioning system such as GPS, Baidu or Galileo which is commonly used outdoors; 
        an optical positioning system that makes use of optical imagery to determine a position, 
        inertial positining systems that detect the movement,
        integrated or also called hybrid positioning system that combines other systems or various technnologies to obtain a result.
        Finally, we also define indoor positioning systems as a seperate category. While there is no ISO standard that
        distinguishes between an indoor positioning system and an integrated positioning system that is commonly used for these
        types of system. We added it as a type to more precicely identify this common type of system. 
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Tracked Entities and Their Properties
        {% endmarkdown %}
        <img src="./images/properties.svg" style="width: 100%"/>
        <aside class="notes">
            Aside from being able to describe a positioning system, we also wanted to describe the data they produce
            in a way that would be usable by other systems.

            Historical data is important for many positioning systems, so one design criteria was definitely to allow 
            individual observations of a value. The most important types of data for positioning system is a position,
            orientation and velocity. But the ontology should still allow for extensions of other sensor data if needed.

            Finally, a system may provide a position with different granularities. For example, an indoor positioning
            system might be able to track your location in an office with 1 meter accuracy. But that would not mean that you want
            other systems or applications to know this accurate position. Or to give a more realistic example, you might have
            a simple system that knows your room based on a QR-code check-in system. The system can report that you are 'In'
            a certain room until you check out - but at the same time your system also knows that at the second you scan the QR-code
            you are standing right in front of it. 
        </aside>
    </section>
</section>

<section>
    <style>
        img.legend {
            position: absolute;
            left: 0;
            bottom: 0;
            width: 400px;
        }
    </style>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Ontology Design
        {% endmarkdown %}
        <img src="./images/systems_and_procedures_nolegend.svg" style="height: 85%">
        <img src="./images/systems_and_procedures_legend.svg" class="legend">
        <aside class="notes">
            We decided to use the Semantic Sensor Network Ontology together with the Sensor, Observation, Sample and Actuator
            ontology - or SOSA for short. Both act as the core ontologies for POSO and already offer the ability to describe 
            systems and their implemented 'procedures'. SOSA extends this with observable properties and observations of these properties.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Ontology Design ...
        {% endmarkdown %}
        <img src="./images/systems_and_procedures_1_nolegend.svg" style="height: 85%">
        <img src="./images/systems_and_procedures_legend.svg" class="legend">
        <aside class="notes">
            Our first contribution with POSO is the ability to classify what type of system we are dealing with.
            We have the five positioning systems that we discussed earlier and in addition we also have a location
            based service in case the underlying system can not be described in more detail - which could be the case
            in some systems that have a blackbox implementation.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Ontology Design ...
        {% endmarkdown %}
        <img src="./images/systems_and_procedures_2_nolegend.svg" style="height: 70%">
        <img src="./images/systems_and_procedures_legend.svg" class="legend">
        <aside class="notes">
            Next, currently at this point in time we have three main categories of procedures or algorithms 
            that a positioning system may use. Radio propagation algorithms that convert a signal strength
            to a distance, sensor fusion algorithms that describe how multiple sensor sources are combined
            and finally a larger category for every positioning technique that a positioning system may use.

            The full list of positioning technique types that are available in POSO can be found in the paper
            and the supplemental material, but in short it includes types such as different RF-based algorithms, 
            fingerprinting techniques, dead reckoning, odometry and simultaneous localisation and mapping 
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Ontology Design ...
        {% endmarkdown %}
        <img src="./images/systems_and_procedures_3_nolegend.svg" style="height: 80%">
        <img src="./images/systems_and_procedures_legend.svg" class="legend">
        <aside class="notes">
            POSO also expands the observable properties and observation results with
            position, velocity, acceleration and orientation.

            The position can be either an absolute or relative position similar to how many 
            existing work classifies the two different types.
            Both velocity and acceleration have two subclasses for linear and angular velocity or acceleration.

            Our decision to make these types of properties a subclass of both an observable property and a result
            was to allow static values.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Ontology Design ...
        {% endmarkdown %}
        <img src="./images/systems_and_procedures_4_nolegend.svg" style="height: 80%">
        <img src="./images/systems_and_procedures_legend.svg" class="legend">
        <aside class="notes">
            Finally, the SOSA core ontology offers the class 'Feature of Interest' which is defined as 
            'the thing whose property is being estimated or calculated in the course of an observation
            to arrive at a result.' We expanded on this by adding a tracked feature and landmark.
            Landmarks are an important aspect in positioning as they are the anchors in many different positioning
            techniques. We added a few basic types of landmarks to make it clear how we expect this type of
            class to be used. Mainly, auditory, visual and RF landmarks with a BluetoothBeacon being a subclass of RF landmarks.

            POSO on itself offers many other useful classes and predicates that can be used to describe
            a positioning system and its data such as additional stimulus classes for different types of movement
            that could trigger the update of a position. For more information, please check the supplemental material.
        </aside>
    </section>
</section>

<section data-markdown data-auto-animate data-timing="40">
    {% markdown %}
        ## POSO Common Module (`posoc`)
        ### `http://purl.org/poso/common/`

        - Adds common in-use positioning systems and location-based services
            - e.g. Global Positioning System, GeolocationAPI
        - Adds common algorithm implementations
            - e.g. HectorSLAM, Trilateration, CSI fingerprinting
            - Adds graph shapes for algorithm input and output
        - Adds common frameworks/platforms
            - e.g. IndoorAtlas, AnyPlace
        - Adds common types of landmarks
            - e.g. iBeacon, Eddystone, AltBeacon
    {% endmarkdown %}

    <aside class="notes">
        We envision POSO as the main ontology that describes different categories of systems, algorithms and techniques.
        But with the large amount of IoT, geospatial and domain specific ontologies available we want
        to add multiple allignment modules for POSO. One of the modules that we included in the paper is the poso-common module
        that includes individuals for different algorithms, existing satellite positioning systems, technologies, protocols and frameworks.

        This module can be used to describe the base of a positioning system, which is often comprised of multiple existing technologies
        and algorithms that are tweaked to solve a particular tracking goal.
    </aside>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Positioning System

            ```turtle
            dbr:Some_Unversity a ssn:Deployment .
            <deployment/building_a> a poso:IndoorDeployment, geosparql:Feature ;
                rdfs:label "Building A"@en ;
                geosparql:hasGeometry [ 
                    a geosparql:Geometry ;
                    geosparql:asWKT "..."^^geosparql:wktLiteral ] .
             
            <system/OPS> a poso:LocationBasedService ;
                rdfs:label "Outdoor campus positioning"@en ;
                ssn:hasSubSystem posoc:GPS ;
                ssn:hasDeployment dbr:Some_University .
            <system/IPS> a poso:IndoorPositioningSystem ;
                rdfs:label "Indoor campus positioning"@en ;
                ssn:hasDeployment <deployment/building_a> ;
                ssn:implements posoc:KNNFingerprinting .
            <system/CampusPositioning> a poso:IntegratedPositioningSystem ;
                rdfs:label "Hybrid campus positioning system"@en ;
                ssn:hasSubSystem  <system/OPS>, <system/IPS> ;
                ssn:implements posoc:WeightedAccuracyFusion .
            ```
        {% endmarkdown %}
        <aside class="notes">
        So let's give a simple example on how POSO would be used to describe positioning systems and their data. 
        Here you see three positioning systems.
        An outdoor positioning system that is actually a location based service using GPS behind the scenes.
        We use it outdoor throughout a univerity deployment.

        An indoor positioning system that implements a specific fingerprinting algorithm in a specified building.
        The building then contains information about its geometry which could be used to map it to geographical coordinates.

        And finally a single positioning system that is a hybrid system using both the outdoor and indoor
        systems. We describe this as two subsystems and we implement a simple weighted accuracy fusion of the output for both systems.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Positioning System

            ```turtle {0,7-10}
            dbr:Some_Unversity a ssn:Deployment .
            <deployment/building_a> a poso:IndoorDeployment, geosparql:Feature ;
                rdfs:label "Building A"@en ;
                geosparql:hasGeometry [ 
                    a geosparql:Geometry ;
                    geosparql:asWKT "..."^^geosparql:wktLiteral ] .
             
            <system/OPS> a poso:LocationBasedService ;
                rdfs:label "Outdoor campus positioning"@en ;
                ssn:hasSubSystem posoc:GPS ;
                ssn:hasDeployment dbr:Some_University .
            <system/IPS> a poso:IndoorPositioningSystem ;
                rdfs:label "Indoor campus positioning"@en ;
                ssn:hasDeployment <deployment/building_a> ;
                ssn:implements posoc:KNNFingerprinting .
            <system/CampusPositioning> a poso:IntegratedPositioningSystem ;
                rdfs:label "Hybrid campus positioning system"@en ;
                ssn:hasSubSystem  <system/OPS>, <system/IPS> ;
                ssn:implements posoc:WeightedAccuracyFusion .
            ```
        {% endmarkdown %}
        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Positioning System

            ```turtle {1-5,11-14}
            dbr:Some_Unversity a ssn:Deployment .
            <deployment/building_a> a poso:IndoorDeployment, geosparql:Feature ;
                rdfs:label "Building A"@en ;
                geosparql:hasGeometry [ 
                    a geosparql:Geometry ;
                    geosparql:asWKT "..."^^geosparql:wktLiteral ] .
             
            <system/OPS> a poso:LocationBasedService ;
                rdfs:label "Outdoor campus positioning"@en ;
                ssn:hasSubSystem posoc:GPS ;
                ssn:hasDeployment dbr:Some_University .
            <system/IPS> a poso:IndoorPositioningSystem ;
                rdfs:label "Indoor campus positioning"@en ;
                ssn:hasDeployment <deployment/building_a> ;
                ssn:implements posoc:KNNFingerprinting .
            <system/CampusPositioning> a poso:IntegratedPositioningSystem ;
                rdfs:label "Hybrid campus positioning system"@en ;
                ssn:hasSubSystem  <system/OPS>, <system/IPS> ;
                ssn:implements posoc:WeightedAccuracyFusion .
            ```
        {% endmarkdown %}
        <aside class="notes">

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Positioning System

            ```turtle {15-18}
            dbr:Some_Unversity a ssn:Deployment .
            <deployment/building_a> a poso:IndoorDeployment, geosparql:Feature ;
                rdfs:label "Building A"@en ;
                geosparql:hasGeometry [ 
                    a geosparql:Geometry ;
                    geosparql:asWKT "..."^^geosparql:wktLiteral ] .
             
            <system/OPS> a poso:LocationBasedService ;
                rdfs:label "Outdoor campus positioning"@en ;
                ssn:hasSubSystem posoc:GPS ;
                ssn:hasDeployment dbr:Some_University .
            <system/IPS> a poso:IndoorPositioningSystem ;
                rdfs:label "Indoor campus positioning"@en ;
                ssn:hasDeployment <deployment/building_a> ;
                ssn:implements posoc:KNNFingerprinting .
            <system/CampusPositioning> a poso:IntegratedPositioningSystem ;
                rdfs:label "Hybrid campus positioning system"@en ;
                ssn:hasSubSystem  <system/OPS>, <system/IPS> ;
                ssn:implements posoc:WeightedAccuracyFusion .
            ```
        {% endmarkdown %}
        <aside class="notes">

        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Tracked Feature and Properties

            ```turtle
            <me> a poso:TrackedFeature, foaf:Person ;
                foaf:name "Maxim Van de Wynckel"@en ;
                poso:hasPosition <me/position> ;
                poso:hasOrientation <me/orientation> .
            
            <me/position> a poso:AbsolutePosition ;
                rdfs:comment "Absolute position of Maxim Van de Wynckel"@en ;
                poso:hasAccuracy <me/position/accuracy> .
            <me/position/accuracy> a ssns:Accuracy ;
                schema:maxValue "2.0"^^xsd:float ; schema:unitCode unit:M .
                
            <me/orientation> a poso:Orientation ;
                rdfs:comment: "Orientation of Maxim Van de Wynckel"@en ;
                poso:hasAccuracy <me/orientation/accuracy> .
            <me/orientation/accuracy> a ssns:Accuracy ;
                schema:maxValue "15.0"^^xsd:float ; schema:unitCode unit:Deg .
            ```
        {% endmarkdown %}
        <aside class="notes">
            Once we have a positioning system we identify the properties of something that we are tracking, in this example me.
            I as a tracked feature and person have a position and orientation, each with an expected maximum accuracy.
            We will refer to these properties in the next examples.
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Observation

            ```turtle
            <position/1654350300000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me> ;
                sosa:observedProperty  <me/position> ;
                sosa:resultTime "2022-06-04T15:55:00+02:00"^^xsd:dateTimeStamp ;
                poso:usedSystem <system/OPS> ;
                sosa:hasResult [ a geosparql:Geometry ;
                    geosparql:hasSpatialAccuracy [ a qudt:QuantityValue ;
                        qudt:unit unit:CentiM ; qudt:numericValue "28"^^xsd:float ] ;
                    geosparql:asWKT """
                        <http://www.opengis.net/def/crs/OGC/1.3/CRS84>
                        Point(4.888028 50.31397)"""^^geosparql:wktLiteral ;
                    geosparql:dimension 2 ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        This is an example observation of the outdoor positioning system for the property 'position'. We use GeoSPARQL as the 
        method to represent the position. This example could be seen as a wrapper around expressing a static geometric description. 
        Instead of simply setting the geometry of an object or person - we use an observation
        so we know the system that obtained the geometry together with its internal workings , the time of the result and
        the expected granularity of the property.
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Observation ...

            ```turtle
            <position/1647513000000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me> ;
                sosa:observedProperty  <me/position> ;
                sosa:resultTime "2022-03-17T11:30:00+01:00"^^xsd:dateTimeStamp ;
                sosa:usedProcedure posoc:KNNFingerprinting ;
                poso:usedSystem <system/IPS> ;
                sosa:hasResult [ a poso:AbsolutePosition ;
                    poso:inDeployment <deployment/building_a> ;
                    poso:hasAccuracy [ a ssns:Accuracy ;
                        schema:maxValue "25.0"^^xsd:float ; 
                        schema:unitCode unit:CentiM ] ;
                    poso:xAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "5"^^xsd:double ] ;
                    poso:yAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "6"^^xsd:double ] ;
                    poso:zAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "3.5"^^xsd:double ] ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        Next, we have an observation of the indoor positioning system. Here we mention which
        technique was used to obtain this observation. Other than the outdoor positioning system our result is
        an absolute position result defined in POSO. We assume in this example that the deployment where the absolute
        position is located has a coordinate
        reference system that can be used to map this cartesian coordinate to a geographical location if needed. POSO
        also provides the ability to indicate a coordinate reference system of an absolute position. However,
        the actual implementation of the reference system is not handled by POSO.
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Observation ...

            ```turtle {4}
            <position/1647513000000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me> ;
                sosa:observedProperty  <me/position> ;
                sosa:resultTime "2022-03-17T11:30:00+01:00"^^xsd:dateTimeStamp ;
                sosa:usedProcedure posoc:KNNFingerprinting ;
                poso:usedSystem <system/IPS> ;
                sosa:hasResult [ a poso:AbsolutePosition ;
                    poso:inDeployment <deployment/building_a> ;
                    poso:hasAccuracy [ a ssns:Accuracy ;
                        schema:maxValue "25.0"^^xsd:float ; 
                        schema:unitCode unit:CentiM ] ;
                    poso:xAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "5"^^xsd:double ] ;
                    poso:yAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "6"^^xsd:double ] ;
                    poso:zAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "3.5"^^xsd:double ] ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Observation ...

            ```turtle {6-16}
            <position/1647513000000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me> ;
                sosa:observedProperty  <me/position> ;
                sosa:resultTime "2022-03-17T11:30:00+01:00"^^xsd:dateTimeStamp ;
                sosa:usedProcedure posoc:KNNFingerprinting ;
                poso:usedSystem <system/IPS> ;
                sosa:hasResult [ a poso:AbsolutePosition ;
                    poso:inDeployment <deployment/building_a> ;
                    poso:hasAccuracy [ a ssns:Accuracy ;
                        schema:maxValue "25.0"^^xsd:float ; 
                        schema:unitCode unit:CentiM ] ;
                    poso:xAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "5"^^xsd:double ] ;
                    poso:yAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "6"^^xsd:double ] ;
                    poso:zAxisValue [ a qudt:QuantityValue ;
                        qudt:unit unit:M ; qudt:numericValue "3.5"^^xsd:double ] ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Relative Position

            ```turtle
            <landmark/wap_1> a poso:Landmark ;
                rdfs:label "Wireless Access Point 1"@en ;
                poso:hasPosition [ a poso:AbsolutePosition ;
                    poso:hasAccuracy [ ... ] ;
                    poso:xAxisValue [ ... ] ; poso:yAxisValue [ ... ] ; poso:zAxisValue [ ... ] ] .
            
            <me/position/relative/wap_1> a poso:RelativeDistance ;
                ssn:isPropertyOf <me> ; # Relative distance from <me> ...
                poso:isRelativeTo <landmark/wap_1> ; # to <landmark/wap_1>
                rdfs:comment "Relative position of Maxim Van de Wynckel to WAP_1"@en .
            <position/relative/wap_1/1646891100000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me>, <landmark/wap_1> ;
                sosa:observedProperty  <me/position/relative/wap_1> ;
                sosa:resultTime "2022-03-10T06:45:00+01:00"^^xsd:dateTimeStamp ;
                poso:madeBySystem <system/IPS> ;
                sosa:usedProcedure posoc:LDPL ; # Log-distance path loss
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:Meter ; qudt:value "3.7"^^xsd:double ] ;
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:DeciB_M ; qudt:value "-82"^^xsd:integer ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        Relative positioning from one feature of interest to another is also an important part of a positioning system. 
        POSO by default includes a relative distance, angle or velocity as types of relative positions.

        In this example we have a relative position to a wireless access point. In indoor positioning systems you would have multiple
        of these relative positions in order to either perform multilateration or - in the case of this example
        perform fingerprinting.

        We have a landmark for our access point with a static absolute position. Next we have a property for 
        this relative position. With POSO we can define that this relative position is for the relative distance from 
        me to the landmark. While for distance the direction does not really matter that indicates from which feature to which
        the property is relative to - for things like relative angle it does matter.

        Finally, we show an observation created by our indoor positioning system where we have the raw relative signal
        strength to the landmark and the relative distance converted using a log distance path loss model that we specified
        using sosa:usedProcedure.

        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Relative Position

            ```turtle {0-4}
            <landmark/wap_1> a poso:Landmark ;
                rdfs:label "Wireless Access Point 1"@en ;
                poso:hasPosition [ a poso:AbsolutePosition ;
                    poso:hasAccuracy [ ... ] ;
                    poso:xAxisValue [ ... ] ; poso:yAxisValue [ ... ] ; poso:zAxisValue [ ... ] ] .
            
            <me/position/relative/wap_1> a poso:RelativeDistance ;
                ssn:isPropertyOf <me> ; # Relative distance from <me> ...
                poso:isRelativeTo <landmark/wap_1> ; # to <landmark/wap_1>
                rdfs:comment "Relative position of Maxim Van de Wynckel to WAP_1"@en .
            <position/relative/wap_1/1646891100000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me>, <landmark/wap_1> ;
                sosa:observedProperty  <me/position/relative/wap_1> ;
                sosa:resultTime "2022-03-10T06:45:00+01:00"^^xsd:dateTimeStamp ;
                poso:madeBySystem <system/IPS> ;
                sosa:usedProcedure posoc:LDPL ; # Log-distance path loss
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:Meter ; qudt:value "3.7"^^xsd:double ] ;
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:DeciB_M ; qudt:value "-82"^^xsd:integer ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Relative Position

            ```turtle {6-9}
            <landmark/wap_1> a poso:Landmark ;
                rdfs:label "Wireless Access Point 1"@en ;
                poso:hasPosition [ a poso:AbsolutePosition ;
                    poso:hasAccuracy [ ... ] ;
                    poso:xAxisValue [ ... ] ; poso:yAxisValue [ ... ] ; poso:zAxisValue [ ... ] ] .
            
            <me/position/relative/wap_1> a poso:RelativeDistance ;
                ssn:isPropertyOf <me> ; # Relative distance from <me> ...
                poso:isRelativeTo <landmark/wap_1> ; # to <landmark/wap_1>
                rdfs:comment "Relative position of Maxim Van de Wynckel to WAP_1"@en .
            <position/relative/wap_1/1646891100000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me>, <landmark/wap_1> ;
                sosa:observedProperty  <me/position/relative/wap_1> ;
                sosa:resultTime "2022-03-10T06:45:00+01:00"^^xsd:dateTimeStamp ;
                poso:madeBySystem <system/IPS> ;
                sosa:usedProcedure posoc:LDPL ; # Log-distance path loss
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:Meter ; qudt:value "3.7"^^xsd:double ] ;
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:DeciB_M ; qudt:value "-82"^^xsd:integer ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        </aside>
    </section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Usage
            ### Relative Position

            ```turtle {10-19}
            <landmark/wap_1> a poso:Landmark ;
                rdfs:label "Wireless Access Point 1"@en ;
                poso:hasPosition [ a poso:AbsolutePosition ;
                    poso:hasAccuracy [ ... ] ;
                    poso:xAxisValue [ ... ] ; poso:yAxisValue [ ... ] ; poso:zAxisValue [ ... ] ] .
            
            <me/position/relative/wap_1> a poso:RelativeDistance ;
                ssn:isPropertyOf <me> ; # Relative distance from <me> ...
                poso:isRelativeTo <landmark/wap_1> ; # to <landmark/wap_1>
                rdfs:comment "Relative position of Maxim Van de Wynckel to WAP_1"@en .
            <position/relative/wap_1/1646891100000> a sosa:Observation ;
                sosa:hasFeatureOfInterest <me>, <landmark/wap_1> ;
                sosa:observedProperty  <me/position/relative/wap_1> ;
                sosa:resultTime "2022-03-10T06:45:00+01:00"^^xsd:dateTimeStamp ;
                poso:madeBySystem <system/IPS> ;
                sosa:usedProcedure posoc:LDPL ; # Log-distance path loss
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:Meter ; qudt:value "3.7"^^xsd:double ] ;
                sosa:hasResult [ a qudt:QuantityValue ;
                    qudt:unit unit:DeciB_M ; qudt:value "-82"^^xsd:integer ] .
            ```
        {% endmarkdown %}
        <aside class="notes">
        </aside>
    </section>
</section>

<section>
    <section data-markdown data-auto-animate data-timing="40">
        {% markdown %}
            ## Conclusion and Future Work
            - We presented the new **POSO** ontology
                - Describe positioning systems, their algorithms and technologies
                - Describe observations and the type of observation
            - Additional `poso-common` module for common algorithms and systems
            - Interoperability between positioning systems
            - Future allignment modules for sensors and specific algorithms
        {% endmarkdown %}
        {% qr "https://github.org/OpenHPS/POSO", "qr-image", "H" %}
        <ul class="info">
            <li><i class="fa-brands fa-github"></i> <a href="https://github.org/OpenHPS/POSO">https://github.org/OpenHPS/POSO</a></li>
            <li><i class="fa-solid fa-book"></i> <a href="https://poso.info/1.0/">https://poso.info/1.0/</a></li>
            <li><i class="fa-solid fa-circle-nodes"></i> <a href="http://purl.org/poso/">http://purl.org/poso/</a></li>
            <li><i class="fa-solid fa-circle-nodes"></i> <a href="http://purl.org/poso/common/">http://purl.org/poso/common/</a></li>
        </ul>
        <style>
        .qr-image {
            position: absolute;
            left: 0em;
            bottom: 1em;
            width: 300px;
            height: 300px;
            float: right;
        }
        ul.info {
            font-size: 1.1em;
            position: absolute;
            left: 300px;
            bottom: 125px;
            list-style-type: none;
        }
        ul.info li i {
            width: 50px;
        }
        ul.info li::before {
            content: none;
        }
        </style>
        <aside class="notes">
        In this paper we presented our Positioning System Ontology named POSO. This is a new
        ontology that allows you to describe positioning systems and their implemented algorithms as well as the
        data they produce.

        We included the poso common module that adds common algorithms and systems and will also be expanded in the future
        with more algorithms, frameworks and in use systems.

        We hope that POSO will help in creating interoperable positioning and navigation applications. Which could
        allow us to transition to a single interoperable application to navigate both outdoors, indoor or underground.

        Future work will definitely be done on additional allignment modules where we link POSO to other ontologies that already
        describe different types of sensors that are commonly used in these types of systems.

        Thank you for your attention.
        </aside>
    </section>
</section>
